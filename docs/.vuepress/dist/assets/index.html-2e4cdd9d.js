import{_ as e,p as a,q as r,a1 as d}from"./framework-96b046e1.js";const h={},n=d('<h2 id="正文-渲染" tabindex="-1"><a class="header-anchor" href="#正文-渲染" aria-hidden="true">#</a> 正文-渲染</h2><p>我希望，正常的渲染，如下面，是分行的，而且每一行有间距，但vuepress会让它不仅没分行，而且还没间距： 示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1，示例文字1。 示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2，示例文字2。 示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3，示例文字3。</p><h2 id="斜体-渲染" tabindex="-1"><a class="header-anchor" href="#斜体-渲染" aria-hidden="true">#</a> 斜体-渲染</h2><p>我希望markdown“斜体”被渲染成“灰色加粗”，但vuepress样式是斜体： <em>斜体文字的示例</em></p><h2 id="加粗-渲染" tabindex="-1"><a class="header-anchor" href="#加粗-渲染" aria-hidden="true">#</a> 加粗-渲染</h2><p>我希望markdown“加粗”被渲染成“绿色加粗”，但vuepress样式是普通加粗： <strong>加粗文字的示例</strong></p><h2 id="引用-渲染" tabindex="-1"><a class="header-anchor" href="#引用-渲染" aria-hidden="true">#</a> 引用-渲染</h2><p>我希望markdown“引用”被渲染成“绿色左竖线”，但vuepress样式是浅灰色竖线：</p><blockquote><p>引用文字的示例</p></blockquote><h2 id="标题-渲染" tabindex="-1"><a class="header-anchor" href="#标题-渲染" aria-hidden="true">#</a> 标题-渲染</h2><h2 id="二级标题" tabindex="-1"><a class="header-anchor" href="#二级标题" aria-hidden="true">#</a> 二级标题</h2>',11),s=[n];function t(i,c){return a(),r("div",null,s)}const p=e(h,[["render",t],["__file","index.html.vue"]]);export{p as default};
